/* 
 * Pollination Server
 *
 * Pollination Server OpenAPI Defintion
 *
 * The version of the OpenAPI document: v0.9.1
 * Contact: info@pollination.cloud
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PollinationSDK.Api;
using PollinationSDK.Model;
using PollinationSDK.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace PollinationSDK.Test
{
    /// <summary>
    ///  Class for testing TaskParameterReference
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TaskParameterReferenceTests
    {
        // TODO uncomment below to declare an instance variable for TaskParameterReference
        //private TaskParameterReference instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of TaskParameterReference
            //instance = new TaskParameterReference();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaskParameterReference
        /// </summary>
        [Test]
        public void TaskParameterReferenceInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" TaskParameterReference
            //Assert.IsInstanceOf(typeof(TaskParameterReference), instance);
        }


        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Variable'
        /// </summary>
        [Test]
        public void VariableTest()
        {
            // TODO unit test for the property 'Variable'
        }

    }

}
