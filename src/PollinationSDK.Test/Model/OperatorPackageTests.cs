/* 
 * Pollination Server
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.31
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PollinationSDK.Api;
using PollinationSDK.Model;
using PollinationSDK.Client;
using PollinationSDK;

using System.Reflection;
using Newtonsoft.Json;

namespace PollinationSDK.Test
{
    /// <summary>
    ///  Class for testing OperatorPackage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OperatorPackageTests
    {
        // TODO uncomment below to declare an instance variable for OperatorPackage
        //private OperatorPackage instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of OperatorPackage
            //instance = new OperatorPackage();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OperatorPackage
        /// </summary>
        [Test]
        public void OperatorPackageInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" OperatorPackage
            //Assert.IsInstanceOf(typeof(OperatorPackage), instance);
        }


        /// <summary>
        /// Test the property 'Digest'
        /// </summary>
        [Test]
        public void DigestTest()
        {
            // TODO unit test for the property 'Digest'
        }
        /// <summary>
        /// Test the property 'Tag'
        /// </summary>
        [Test]
        public void TagTest()
        {
            // TODO unit test for the property 'Tag'
        }
        /// <summary>
        /// Test the property 'Keywords'
        /// </summary>
        [Test]
        public void KeywordsTest()
        {
            // TODO unit test for the property 'Keywords'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Icon'
        /// </summary>
        [Test]
        public void IconTest()
        {
            // TODO unit test for the property 'Icon'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'Manifest'
        /// </summary>
        [Test]
        public void ManifestTest()
        {
            // TODO unit test for the property 'Manifest'
        }
        /// <summary>
        /// Test the property 'Readme'
        /// </summary>
        [Test]
        public void ReadmeTest()
        {
            // TODO unit test for the property 'Readme'
        }
        /// <summary>
        /// Test the property 'License'
        /// </summary>
        [Test]
        public void LicenseTest()
        {
            // TODO unit test for the property 'License'
        }

    }

}
